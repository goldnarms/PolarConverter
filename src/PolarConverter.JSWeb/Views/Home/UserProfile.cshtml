@using PolarConverter.JSWeb.Models
@using PolarConverter.DAL.Models
@model PolarConverter.JSWeb.ViewModels.UserViewModel
@{
    ViewBag.Title = "UserProfile";
}
<div data-ng-controller="userProfileCtrl as up">
    <div class="row">
        <div class="col-md-12">
            @if(Model.ActiveSubscription != null){
                <strong>Pro Subscription</strong>
                <p>
                    Subscription will continue to run until canceled. Next charge will come on: @Model.ActiveSubscription.EndTime.ToString("d")
                    @using (Html.BeginForm("AbortSubscription", "Account", new { id = @Model.ActiveSubscription.SubscriptionId}, FormMethod.Post, null))
                    {
                        <p><button type="submit" class="btn btn-primary btn-sm">Cancel subscription</button></p>
                    }
                </p>
                <h4>Services</h4>
                if (Model.RegisteredProviders.Any(p => p == ProviderType.Dropbox))
                {
                    <p><em>Dropbox connected</em> @Html.ActionLink("[Remove]", "RemoveProvider", "Services", new { id = 2 }, null)</p> 
                }
                else
                {
                    using (Html.BeginForm("ConnectToDropbox", "Services", FormMethod.Post, new {}))
                    {
                        <p><button type="submit" class="btn btn-primary btn-sm">Connect to Dropbox</button></p>
                    }
                }

                if (Model.RegisteredProviders.Any(p => p == ProviderType.Strava))
                {
                    <p><em>Strava connected</em> @Html.ActionLink("[Remove]", "RemoveProvider", "Services", new { id = 0 }, null)</p>
                }
                else
                {
                    using (Html.BeginForm("ConnectToStrava", "Services", FormMethod.Post, new {}))
                    {
                        <p><button type="submit" class="btn btn-provider btn-strava btn-sm">Connect to Strava</button></p>
                    }
                }
                if (Model.RegisteredProviders.Any(p => p == ProviderType.Runkeeper))
                {
                    <p><em>Runkeeper connected</em> @Html.ActionLink("[Remove]", "RemoveProvider", "Services", new { id = 1 }, null)</p>
                }
                else
                {
                    using (Html.BeginForm("ConnectToRunkeeper", "Services", FormMethod.Post, new {}))
                    {
<button type="submit" class="btn btn-provider btn-runkeeper btn-sm">Connect to Runkeeper</button>
                    }
                }
            }
            else{
<h6>Order Pro subscription</h6>
            using (Html.BeginForm("OrderSubscription", "Account", FormMethod.Post, new {}))
                    {
                        <button type="submit">Order (12$/yr)</button>
                    }
            }
        </div>
    </div>
    <div class="row" style="padding-top: 45px">
        <div class="col-md-12">
            <div class="well">
                <form class="form-horizontal" name="up.userProfileForm" novalidate="">
                    <fieldset>
                        <legend>User profile</legend>
                        <div class="form-group">
                            <label class="col-lg-2 control-label" for="inputWeight">Weight</label>
                            <div class="col-lg-10">
                                <input type="number" step="0.1" min="1" max="600" value=@Model.Weight id="inputWeight" data-ng-model="up.userViewModel.weight" required />
                                <label>
                                    <input type="radio" value="kg" data-ng-model="up.userViewModel.weightMode" required />&nbsp;Kg
                                </label>
                                <label>
                                    <input type="radio" value="lbs" data-ng-model="up.userViewModel.weightMode" required />&nbsp;Lbs
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label" for="inputAge">Age</label>
                            <div class="col-lg-10"><input type="number" value="" id="inputAge" min="1" max="130" step="1" data-ng-model="up.userViewModel.age" required /></div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Gender</label>
                            <div class="col-lg-10">
                                <label>
                                    <input type="radio" value="m" data-ng-model="up.userViewModel.gender" required />&nbsp;Male
                                </label>
                                <label>
                                    <input type="radio" value="f" data-ng-model="up.userViewModel.gender" required />&nbsp;Female
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label" for="inputTimeZone">
                                Timezone
                            </label>
                            <div class="col-lg-10">
                                <select data-ng-model="up.selectedTimeZone" id="inputTimeZone" class="form-control" data-ng-options="tz.text for tz in uc.timeZones" required></select>
                            </div>

                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label" for="inputForceGarmin">
                                Force Garmin device
                            </label>
                            <div class="col-lg-10"><input type="checkbox" data-ng-model="up.userViewModel.forceGarmin" id="inputForceGarmin" /></div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-12">
                                <a class="btn btn-default btn-lg" data-ng-click="uc.cancel()">Cancel</a>
                                <a class="btn btn-primary btn-lg" data-ng-click="uc.saveChanges()" data-ng-disabled="up.isSaving || up.userProfileForm.$invalid">Save</a>
                            </div>
                        </div>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>
